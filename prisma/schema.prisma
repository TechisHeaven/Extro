// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  name              String?
  email             String    @unique
  password          String?
  about_me          String?
  image             String?
  emailVerified     Boolean?
  magicToken        String?
  magicTokenExpires DateTime?
  sessionToken      String?
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  accounts          Account[] // Relation to Account model
  sessions          Session[] // Relation to Session model
  Expense           Expense?
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Expense {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  price       Float
  category    Category
  type        Type
  images      String[]
  expenseTime DateTime @default(now())
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @unique
}

enum Category {
  SNACKS
  GROCERIES
}

enum Type {
  CASH
  CARD
}
